#! /bin/bash -e
[ -z "$MODDABLE" ] && export MODDABLE=/home/sw/moddable/moddable
[ -z "$IDF_PATH" ] && export IDF_PATH=/home/sw/moddable/esp-idf5
[ -z "$UPLOAD_PORT" ] && export UPLOAD_PORT=/dev/ttyUSB0
[ -z "$MODTVE"] && export MODTVE=./tvemodules
[ -z "$DEBUGGER_SPEED" ] && export DEBUGGER_SPEED=115200
#export PATH=/home/sw/moddable/moddable/build/bin/lin/debug:$PATH

if [[ "$1" == esp32* ]]; then
    TARGET=$1
else
    TARGET=esp32
fi

# tsc calculates a root dir which is the common prefix of all imported modules in the
# moddable manifest. We need this to generate the typescript manifest.
ROOT_DIR=${PWD} # %/*}

mkdir -p build
rm -r typings 2>/dev/null || true
#echo == Compilation env vars:
#printenv | sort
echo == Starting mcconfig
mcconfig -d -m -t build -o ./build -p $TARGET "${@}"

echo == Generating typescript manifest, ROOT_DIR=$ROOT_DIR
NAME=$(basename $PWD)
TSCONFIG=build/tmp/$TARGET/debug/$NAME/modules/tsconfig.json
BIN_DIR=build/bin/$TARGET/debug/$NAME
TYPINGS_DIR=$PWD/typings
[[ -f $TSCONFIG ]] || (echo $TSCONFIG missing; exit 1)
[[ -f $BIN_DIR/xs_esp32.bin ]] || (echo $BIN_DIR/xs_esp32.bin missing; exit 1)

# Reconfigure the typings directory
mv typings/tvemodules/* typings
rmdir typings/tvemodules
for f in $(cd tvemodules; find . -name '*.d.ts'); do
    mkdir -p typings/${f%/*/*}
    cp tvemodules/$f typings/${f%/*/*} # e.g. tvemodules/sys/sys.d.ts -> typings/sys.d.ts
done
mkdir -p typings/vsl
cp vsl/vsl.d.ts typings/vsl
for f in $(grep -r -l '/// <reference path' typings); do
    sed -i -e '/\/\/\/ <reference /d' $f
done

M=manifest_$NAME.json
cat >$M <<EOF
{
    "typescript": {
        "tsconfig": {
            "compilerOptions": {
EOF

OLDIFS="$IFS"
IFS="|"
RE='^\s*"(.*)"$'
MOD_RE='".*moddable/typings'
JSB_RE='".*js-board'
sed -n -e '/^\s*"paths":/,/^\s*}/p' $TSCONFIG | 
    while read line; do
        if [[ "$line" =~ $RE ]]; then
            # got a line with an actual path (not the module name)
            if [[ -f ${BASH_REMATCH[1]}.ts ]] || [[ -f ${BASH_REMATCH[1]}.d.ts ]]; then
                # this is a path to a .ts file, ned to remap to typings dir to find .d.ts file
                line=${line/\"$ROOT_DIR/\"$TYPINGS_DIR}
            fi
            # remap top-level dirs to variables for portability
            if [[ "$line" =~ $MOD_RE ]]; then
                line=$(echo "$line" | sed -e 's;".*typings;"$(MODDABLE)/typings;')
            fi
            if [[ "$line" =~ $JSB_RE ]]; then
                line=$(echo "$line" | sed -E -e 's;".*typings(/tvemodules)?;"$(JS-BOARD)/typings;')
            fi
        fi
        echo "$line"
    done >>$M
IFS="$OLDIFS"

cat >>$M <<EOF
                "sourceMap": true
            }
        }
    }
}
EOF

echo "rest-server file"
find typings -name 'rest-server.d.ts'
echo "in mcconfig tsconfig"
grep 'rest-server"$' $(find build -name tsconfig.json) | sed -e 's/^\s*//'
echo "in manifest-js-board"
grep 'rest-server"$' manifest_js-board.json | sed -e 's/^\s*//'

[ -e $UPLOAD_PORT ] || exit 0

python $IDF_PATH/components/esptool_py/esptool/esptool.py \
    -p $UPLOAD_PORT -b 920600 --chip esp32 \
    --before default_reset --after hard_reset write_flash \
    --flash_mode dio --flash_size 4MB --flash_freq 80m \
    0x1000 $BIN_DIR/bootloader.bin \
    0x8000 $BIN_DIR/partition-table.bin \
    0x10000 $BIN_DIR/xs_esp32.bin                

[ -z "$DISPLAY" ] && exit 0

serial2xsbug $UPLOAD_PORT 115200 8N1
#miniterm $UPLOAD_PORT 115200
#/home/src/js-board/jsb/jsb -p $UPLOAD_PORT # --test rstream
